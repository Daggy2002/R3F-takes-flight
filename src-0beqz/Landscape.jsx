/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 scene.glb
*/

import React, { useMemo, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { Color, MeshStandardMaterial, Vector3 } from "three";

export function Landscape(props) {
  const { nodes, materials } = useGLTF("assets/models/scene.glb");
  const lightsMaterial = useMemo(() => {
    return new MeshStandardMaterial({
      roughness: 0,
      metalness: 0,
      emissive: new Color(10 * 0.5, 3 * 0.5, 1 * 0.5),
    });
  }, []);

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.landscape_gltf.geometry}
        material={materials["Material.009"]}
        position={[0, -2.6, 0]}
      />
      <mesh
        geometry={nodes.landscape_borders.geometry}
        material={materials["Material.010"]}
        position={[0, -2.6, 0]}
      />
      <mesh
        geometry={nodes.trees_light.geometry}
        material={materials["Material.008"]}
        position={[0, -2.6, 0]}
      />
      {/* <mesh
        geometry={nodes.walls.geometry}
        material={nodes.walls.material}
        position={[0, 3, -5.109]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[5, 1, 3]}
      /> */}
      <mesh
        geometry={nodes.water.geometry}
        material={materials.Water}
        position={[-2.536, 1.272, 0.79]}
        rotation={[0, -0.509, 0]}
        scale={[1.285, 1.285, 0.794]}
      />
      <mesh
        geometry={nodes.water1.geometry}
        material={materials.Water}
        position={[1.729, 0.943, 1.709]}
        rotation={[0, -1.117, 0]}
        scale={[2.585, 2.837, 1.608]}
      />
      <mesh
        geometry={nodes.water2.geometry}
        material={materials.Water}
        position={[1.115, 1.588, -2.275]}
        scale={[2.405, 2.405, 1.188]}
      />
      <mesh
        geometry={nodes.lights.geometry}
        // material={materials.Material}
        material={lightsMaterial}
        position={[1.113, 1.482, -0.039]}
        scale={0.018}
      />
    </group>
  );
}

useGLTF.preload("assets/models/scene.glb");
